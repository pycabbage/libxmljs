name: Upload Assets to GitHub

on:
  push:
    # branches:
    #   - "*"
    tags:
      - "*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    if: false
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 14
          - 16
          - 18
          - 19
        os: [ubuntu-latest]
        # os: [ubuntu-latest, macos-latest, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org
          cache: "npm"

      - name: Specify msvs_version
        if: matrix.os == 'windows-2019'
        run: npm config set msvs_version 2019 --global
      - name: Package prebuilt binary
        run: |
          npm i @mapbox/node-pre-gyp node-gyp -g
          npm install --build-from-source
          node-pre-gyp package 2>&1
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-node${{ matrix.node-version }}
          path: "build/stage/pycabbage/libxmljs/releases/download/**/*.tar.gz"
      # - name: Upload release binary
      #   uses: alexellis/upload-assets@0.4.0
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     asset_paths: '["./build/stage/pycabbage/libxmljs/releases/download/**/*.tar.gz"]'
  build-arm:
    name: Build (arm)
    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 14
          - 16
          - 18
          - 19
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: List files
        run: ls -l
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: aarch64
          distro: ubuntu_latest
          githubToken: ${{ github.token }}

          setup: |
            mkdir -p "${PWD}/build"

          dockerRunArgs: |
            --volume "${PWD}/build:/build"
            --volume "${PWD}:/app"
            --workdir "/app"

          shell: /bin/bash

          install: |
            apt update
            apt install -y curl python3 build-essential
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.2/install.sh | bash
            source ~/.nvm/nvm.sh
            nvm install v${{matrix.node-version}}

          run: |
            source ~/.nvm/nvm.sh
            npm i @mapbox/node-pre-gyp node-gyp -g
            npm install --build-from-source --unsafe-perm
            node-pre-gyp package 2>&1

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-node${{ matrix.node-version }}-arm
          path: "build/stage/pycabbage/libxmljs/releases/download/**/*.tar.gz"
      # - name: Upload release binary
      #   uses: alexellis/upload-assets@0.3.0
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      #   with:
      #     asset_paths: '["./build/stage/pycabbage/libxmljs/releases/download/**/*.tar.gz"]'

  publish-release:
    name: Publish release
    needs: [build, build-arm]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifact
      - name: Display structure of downloaded files
        run: ls -lR artifact
      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: artifact
